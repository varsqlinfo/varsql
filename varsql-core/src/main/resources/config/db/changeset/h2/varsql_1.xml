<?xml version="1.0" encoding="UTF-8"?>

<database>
    <description>설명</description>
    <apply>
        <sql description="init-db" multiple="true" delimiter=";">
<![CDATA[
CREATE TABLE VTDATABASE_CHANGELOG(
     ID number   NOT NULL
    , TYPE VARCHAR(100)   NOT NULL     
    , VERSION VARCHAR(30)   NOT NULL    
    , HASH VARCHAR(255)   NOT NULL		
    , APPLIED_DT TIMESTAMP   NOT NULL default current_timestamp 
    , DESCRIPTION VARCHAR(1000)			
    , APPLY_SQL CLOB					
    , REVERT_SQL CLOB					
    , STATE VARCHAR(10) 				
    , SQL_LOG CLOB					 
    , CONSTRAINT PK_VTDATABASE_CHANGELOG PRIMARY KEY (ID, TYPE, VERSION)
);

CREATE TABLE VTSEQUENCE(
	SEQUENCE_NAME VARCHAR(255) NOT NULL
	,NEXT_VAL BIGINT
	,CONSTRAINT PK_VTSEQUENCE PRIMARY KEY  ( SEQUENCE_NAME)
);

create sequence hibernate_sequence start with 1 increment by 1;

CREATE TABLE VTUSER(
	VIEWID 	VARCHAR(36)				
	, UID		VARCHAR(250)		
	, UPW		VARCHAR(500)		
	, UNAME		VARCHAR(250)		
	, ORG_NM		VARCHAR(250)	
	, DEPT_NM	VARCHAR(250)		
	, LANG		VARCHAR(5)			
	, UEMAIL		VARCHAR(250)	
	, MOBILE_NO		VARCHAR(20)		
	, TEL_NO		VARCHAR(20) 	
	, EMP_NO		VARCHAR(20) 	
	, USER_ROLE		VARCHAR(1000)	
	, DESCRIPTION	VARCHAR(2000)	
	, ACCEPT_YN 	CHAR(1) default 'N'	
	, BLOCK_YN 		CHAR(1) default 'N'	
	, REG_ID 	VARCHAR(36)				
	, REG_DT	TIMESTAMP default current_timestamp	
	, UPD_ID 	VARCHAR(36)							
	, UPD_DT	TIMESTAMP default current_timestamp	
	, CONSTRAINT PK_VPIUSER PRIMARY KEY (VIEWID)
	, CONSTRAINT UK_VPIUSER UNIQUE (UID)
);



CREATE TABLE VTQTZ_TRIGGERS (
  SCHED_NAME VARCHAR(120) NOT NULL,
  TRIGGER_NAME VARCHAR (200)  NOT NULL ,
  TRIGGER_GROUP VARCHAR (200)  NOT NULL ,
  JOB_NAME VARCHAR (200)  NOT NULL ,
  JOB_GROUP VARCHAR (200)  NOT NULL ,
  DESCRIPTION VARCHAR (250) NULL ,
  NEXT_FIRE_TIME BIGINT NULL ,
  PREV_FIRE_TIME BIGINT NULL ,
  PRIORITY INTEGER NULL ,
  TRIGGER_STATE VARCHAR (16)  NOT NULL ,
  TRIGGER_TYPE VARCHAR (8)  NOT NULL ,
  START_TIME BIGINT NOT NULL ,
  END_TIME BIGINT NULL ,
  CALENDAR_NAME VARCHAR (200)  NULL ,
  MISFIRE_INSTR SMALLINT NULL ,
  JOB_DATA IMAGE NULL
);

ALTER TABLE VTQTZ_CALENDARS  ADD
  CONSTRAINT PK_VTQTZ_CALENDARS PRIMARY KEY  
  (
    SCHED_NAME,
    CALENDAR_NAME
  );

ALTER TABLE VTQTZ_CRON_TRIGGERS  ADD
  CONSTRAINT PK_VTQTZ_CRON_TRIGGERS PRIMARY KEY  
  (
    SCHED_NAME,
    TRIGGER_NAME,
    TRIGGER_GROUP
  );

ALTER TABLE VTQTZ_FIRED_TRIGGERS  ADD
  CONSTRAINT PK_VTQTZ_FIRED_TRIGGERS PRIMARY KEY  
  (
    SCHED_NAME,
    ENTRY_ID
  );

ALTER TABLE VTQTZ_PAUSED_TRIGGER_GRPS  ADD
  CONSTRAINT PK_VTQTZ_PAUSED_TRIGGER_GRPS PRIMARY KEY  
  (
    SCHED_NAME,
    TRIGGER_GROUP
  );

ALTER TABLE VTQTZ_SCHEDULER_STATE  ADD
  CONSTRAINT PK_VTQTZ_SCHEDULER_STATE PRIMARY KEY  
  (
    SCHED_NAME,
    INSTANCE_NAME
  );

ALTER TABLE VTQTZ_LOCKS  ADD
  CONSTRAINT PK_VTQTZ_LOCKS PRIMARY KEY  
  (
    SCHED_NAME,
    LOCK_NAME
  );

ALTER TABLE VTQTZ_JOB_DETAILS  ADD
  CONSTRAINT PK_VTQTZ_JOB_DETAILS PRIMARY KEY  
  (
    SCHED_NAME,
    JOB_NAME,
    JOB_GROUP
  );

ALTER TABLE VTQTZ_SIMPLE_TRIGGERS  ADD
  CONSTRAINT PK_VTQTZ_SIMPLE_TRIGGERS PRIMARY KEY  
  (
    SCHED_NAME,
    TRIGGER_NAME,
    TRIGGER_GROUP
  );

ALTER TABLE VTQTZ_SIMPROP_TRIGGERS  ADD
  CONSTRAINT PK_VTQTZ_SIMPROP_TRIGGERS PRIMARY KEY  
  (
    SCHED_NAME,
    TRIGGER_NAME,
    TRIGGER_GROUP
  );

ALTER TABLE VTQTZ_TRIGGERS  ADD
  CONSTRAINT PK_VTQTZ_TRIGGERS PRIMARY KEY  
  (
    SCHED_NAME,
    TRIGGER_NAME,
    TRIGGER_GROUP
  );

ALTER TABLE VTQTZ_CRON_TRIGGERS ADD
  CONSTRAINT FK_VTQTZ_CRON_TRIGGERS_VTQTZ_TRIGGERS FOREIGN KEY
  (
    SCHED_NAME,
    TRIGGER_NAME,
    TRIGGER_GROUP
  ) REFERENCES VTQTZ_TRIGGERS (
    SCHED_NAME,
    TRIGGER_NAME,
    TRIGGER_GROUP
  ) ON DELETE CASCADE;


ALTER TABLE VTQTZ_SIMPLE_TRIGGERS ADD
  CONSTRAINT FK_VTQTZ_SIMPLE_TRIGGERS_VTQTZ_TRIGGERS FOREIGN KEY
  (
    SCHED_NAME,
    TRIGGER_NAME,
    TRIGGER_GROUP
  ) REFERENCES VTQTZ_TRIGGERS (
    SCHED_NAME,
    TRIGGER_NAME,
    TRIGGER_GROUP
  ) ON DELETE CASCADE;

ALTER TABLE VTQTZ_SIMPROP_TRIGGERS ADD
  CONSTRAINT FK_VTQTZ_SIMPROP_TRIGGERS_VTQTZ_TRIGGERS FOREIGN KEY
  (
    SCHED_NAME,
    TRIGGER_NAME,
    TRIGGER_GROUP
  ) REFERENCES VTQTZ_TRIGGERS (
    SCHED_NAME,
    TRIGGER_NAME,
    TRIGGER_GROUP
  ) ON DELETE CASCADE;


ALTER TABLE VTQTZ_TRIGGERS ADD
  CONSTRAINT FK_VTQTZ_TRIGGERS_VTQTZ_JOB_DETAILS FOREIGN KEY
  (
    SCHED_NAME,
    JOB_NAME,
    JOB_GROUP
  ) REFERENCES VTQTZ_JOB_DETAILS (
    SCHED_NAME,
    JOB_NAME,
    JOB_GROUP
  );
  
COMMIT;        
]]>
        </sql>
    </apply>
    <revert>
        <sql description="">
drop table VTBOARD;
drop table VTBOARD_COMMENT;
drop table VTBOARD_FILE;
drop table VTCONNECTION;
drop table VTDATABASE_BLOCK_USER;
drop table VTDATABASE_CONN_HIST;
drop table VTDATABASE_CONN_TAB;
drop table VTDATABASE_GROUP;
drop table VTDATABASE_GROUP_DB;
drop table VTDATABASE_GROUP_USER;
drop table VTDATABASE_MANAGER;
drop table VTDBTYPE;
drop table VTDBTYPE_DRIVER_FILE;
drop table VTDBTYPE_DRIVER_PROVIDER;
drop table VTDBTYPE_DRIVER_TYPE;
drop table VTEMAIL_TOKEN;
drop table VTFILE;
drop table VTGLOSSARY;
drop table VTMENU_MENUBYROLE;
drop table VTMENU_ROLE;
drop table VTMENU_USERBYROLE;
drop table VTNOTE;
drop table VTNOTE_USER;
drop table VTPREFERENCES;
drop table VTSEQUENCE;
drop table VTSQL_EXCEPTIONLOG;
drop table VTSQL_HISTORY;
drop table VTSQL_SQLFILE;
drop table VTSQL_SQLFILE2;
drop table VTSQL_SQLFILE_TAB;
drop table VTSQL_STATISTICS;
drop table VTUSER;
drop table VTUSER_LOG_HIST;
drop table VTUSER_REMEMBERME;
drop table VTQNA;

--quartz
drop table VTQTZ_FIRED_TRIGGERS;
drop table VTQTZ_PAUSED_TRIGGER_GRPS;
drop table VTQTZ_SCHEDULER_STATE;
drop table VTQTZ_LOCKS;
drop table VTQTZ_SIMPROP_TRIGGERS;
drop table VTQTZ_SIMPLE_TRIGGERS;
drop table VTQTZ_CRON_TRIGGERS;
drop table VTQTZ_BLOB_TRIGGERS;
drop table VTQTZ_TRIGGERS;
drop table VTQTZ_JOB_DETAILS;
drop table VTQTZ_CALENDARS;
drop table VTQTZ_JOB_SCHEDULE;
drop table VTQTZ_HISTORY;
drop table VTQTZ_HISTORY_LOG;

--sequence
DROP SEQUENCE HIBERNATE_SEQUENCE;
        </sql>
    </revert>
</database>