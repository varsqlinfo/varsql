<?xml version="1.0" encoding="UTF-8"?>

<database>
  <description>설명</description>
  <apply>
    <sql description="init db" multiple="true" delimiter=";">
<![CDATA[
-- sequence
create sequence hibernate_sequence start with 1 increment by 1;

-- HIBERNATE SEQUENCE 테이블 정보
CREATE TABLE VTSEQUENCE(
  SEQUENCE_NAME VARCHAR(255) NOT NULL
  ,NEXT_VAL BIGINT
  ,CONSTRAINT PK_VTSEQUENCE PRIMARY KEY  ( SEQUENCE_NAME)
);

-- 사용자 정보 db
CREATE TABLE VTUSER(
  VIEWID   VARCHAR(36)    
  , UID  VARCHAR(250)  
  , UPW  VARCHAR(500)  
  , UNAME  VARCHAR(250)  
  , ORG_NM  VARCHAR(250)
  , DEPT_NM  VARCHAR(250)  
  , LANG  VARCHAR(5)  
  , UEMAIL  VARCHAR(250)
  , MOBILE_NO  VARCHAR(20)  
  , TEL_NO  VARCHAR(20) 
  , EMP_NO  VARCHAR(20) 
  , USER_ROLE  VARCHAR(1000)
  , DESCRIPTION  VARCHAR(2000)
  , ACCEPT_YN   CHAR(1) default 'N'
  , BLOCK_YN   CHAR(1) default 'N'
  , REG_ID   VARCHAR(36)    
  , REG_DT  TIMESTAMP default current_timestamp
  , UPD_ID   VARCHAR(36)      
  , UPD_DT  TIMESTAMP default current_timestamp
  , CONSTRAINT PK_VPIUSER PRIMARY KEY (VIEWID)
  , CONSTRAINT UK_VPIUSER UNIQUE (UID)
);

-- remember me
CREATE TABLE VTUSER_REMEMBERME(
  SERIES   VARCHAR(64) NOT NULL
  ,USERNAME   VARCHAR(64) NOT NULL
  ,TOKEN   VARCHAR(64) NOT NULL
  ,LAST_USED   TIMESTAMP default current_timestamp
  ,CONSTRAINT PK_VTUSER_REMEMBERME PRIMARY KEY (SERIES)
);

-- 사용자 접속  로그
CREATE TABLE VTUSER_LOG_HIST(
   LOG_PK bigint NOT NULL
  , VIEWID VARCHAR(36) 
  , HIST_TIME TIMESTAMP  default current_timestamp  
  , HIST_TYPE   VARCHAR(6)  
  , USR_IP   VARCHAR(45)  
  , BROWSER  VARCHAR(250)   
  , DEVICE_TYPE  VARCHAR(10)  
  , PLATFORM  VARCHAR(10)   
);

--커넥션 정보 저장 db
CREATE TABLE VTCONNECTION (
  VCONNID   VARCHAR(5) NOT NULL    
  ,VNAME  VARCHAR(250)  NOT NULL  
  ,VSERVERIP  VARCHAR(45)      
  ,VPORT  INTEGER        
  ,VDATABASENAME  VARCHAR(255)
  ,VDBSCHEMA  VARCHAR(250)  
  ,VURL  VARCHAR(250)      
  ,VDRIVER  VARCHAR(100)  NOT NULL  
  ,VID  VARCHAR(100)    
  ,VPW  VARCHAR(500)    
  ,MAX_SELECT_COUNT INTEGER  default 10000
  ,MAX_ACTIVE INTEGER  default 5
  ,MIN_IDLE  INTEGER  default 2
  ,TIMEOUT  INTEGER  default 18000
  ,EXPORTCOUNT  INTEGER default 1000
  ,VCONNOPT  VARCHAR(2000)
  ,VPOOLOPT  VARCHAR(2000)
  ,VDBVERSION  VARCHAR(10)      
  ,URL_DIRECT_YN   CHAR(1) default 'Y'  
  ,USE_YN   CHAR(1) default 'Y'    
  ,SCHEMA_VIEW_YN   CHAR(1) default 'N'  
  ,DEL_YN   CHAR(1) default 'N'    
  ,BASETABLE_YN   CHAR(1) default 'Y'  
  ,LAZYLOAD_YN   CHAR(1) default 'N'  
  ,TEST_WHILE_IDLE   CHAR(1) default 'N'  
  ,ENABLE_CONNECTION_POOL   CHAR(1) default 'N'  
  ,USE_COLUMN_LABEL CHAR(1) default 'Y'
  ,REG_DT  TIMESTAMP default current_timestamp
  ,REG_ID VARCHAR(36)
  ,UPD_DT  TIMESTAMP default current_timestamp
  ,UPD_ID VARCHAR(36)
  ,CONSTRAINT PK_VTCONNECTION PRIMARY KEY (VCONNID)
);

-- 사용자  db 접속 로그
CREATE TABLE VTDATABASE_CONN_HIST(
  LOG_PK bigint NOT NULL
  ,VCONNID VARCHAR(5) NOT NULL 
  ,VIEWID VARCHAR(36)  
  ,CONN_TIME TIMESTAMP  
  ,REQ_URL VARCHAR(2000)  
);

-- 사용자  db TAB 정보
CREATE TABLE VTDATABASE_CONN_TAB(
  VIEWID  VARCHAR(250) NOT NULL
  , VCONNID VARCHAR(5) NOT NULL
  , PREV_VCONNID VARCHAR(5)
  , VIEW_YN  CHAR(1)
  , REG_ID  VARCHAR(36)
  , REG_DT  TIMESTAMP default current_timestamp
  ,CONSTRAINT PK_VTDATABASE_CONN_TAB PRIMARY KEY  ( VIEWID, VCONNID)
);

-- db 매니저
CREATE TABLE VTDATABASE_MANAGER(
  VCONNID  VARCHAR(5) NOT NULL
  ,VIEWID  VARCHAR(36) NOT NULL
  ,REG_ID  VARCHAR(36)
  ,REG_DT  TIMESTAMP default current_timestamp
  ,CONSTRAINT PK_VTDATABASE_MANAGER PRIMARY KEY (VCONNID, VIEWID)
);

-- db block user
CREATE TABLE VTDATABASE_BLOCK_USER(
  VCONNID  VARCHAR(5)
  ,VIEWID  VARCHAR(36)
  ,REG_ID  VARCHAR(36)
  ,REG_DT  TIMESTAMP default current_timestamp
  ,CONSTRAINT PK_VTDATABASE_BLOCK_USER PRIMARY KEY (VCONNID, VIEWID)
);


-- 데이터 베이스 그룹
CREATE TABLE VTDATABASE_GROUP (
  GROUP_ID VARCHAR2(36) NOT NULL
  , GROUP_NAME VARCHAR2(255)
  , GROUP_DESC VARCHAR2(2000)
  , REG_ID VARCHAR(36)
  , REG_DT TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL
  , UPD_ID VARCHAR(36)
  , UPD_DT TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL
  ,CONSTRAINT PK_VTDATABASE_GROUP PRIMARY KEY (GROUP_ID)
);

-- 데이터 베이스 그룹  & db mapping 정보.
CREATE TABLE VTDATABASE_GROUP_DB (
  GROUP_ID VARCHAR2(36) NOT NULL 
  , VCONNID  VARCHAR(5)  NOT NULL
  , REG_ID VARCHAR(36)
  , REG_DT TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL
  ,CONSTRAINT PK_VTDATABASE_GROUP_DB PRIMARY KEY (GROUP_ID, VCONNID)
);

-- 데이터 베이스 그룹  & user mapping 정보.
CREATE TABLE VTDATABASE_GROUP_USER (
  GROUP_ID VARCHAR2(36) NOT NULL 
  , VIEWID VARCHAR(36)
  , REG_ID VARCHAR(36)
  , REG_DT TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL
  ,CONSTRAINT PK_VTDATABASE_GROUP_USER PRIMARY KEY (GROUP_ID, VIEWID)
);

-- db qna계시판
CREATE TABLE VTQNA(
  QNAID  VARCHAR(34)      
  ,TITLE  VARCHAR(250)    
  ,QUESTION  VARCHAR(2000)    
  ,ANSWER  VARCHAR(2000)    
  ,ANSWER_ID  VARCHAR(36)    
  ,ANSWER_DT  TIMESTAMP      
  ,DEL_YN  CHAR(1)  default 'N'    
  ,REG_ID  VARCHAR(36)    
  ,REG_DT  TIMESTAMP      
  ,UPD_ID  VARCHAR(36)      
  ,UPD_DT  TIMESTAMP      
  ,CONSTRAINT PK_VTQNA PRIMARY KEY (QNAID)
);

-- db 타입 관리 테이블
CREATE TABLE VTDBTYPE(
  TYPEID   CHAR(3) not null
  ,NAME  VARCHAR(50) not null
  ,LANGKEY  VARCHAR(50)  not null
  ,URLPREFIX  VARCHAR(30)
  ,CONSTRAINT PK_VTDBTYPE PRIMARY KEY (TYPEID)
);

-- db 타입 드라이버
CREATE TABLE VTDBTYPE_DRIVER_TYPE(
  DRIVER_ID  char(3) not null    
  ,DBTYPE   VARCHAR(50) not null  
  ,DBDRIVER  VARCHAR(100)  not null  
  ,VALIDATION_QUERY  VARCHAR(255)  not null
  ,URL_FORMAT    VARCHAR(2000)  not null
  ,DEFAULT_PORT  INTEGER    
  ,SCHEMA_TYPE  VARCHAR(50)  default 'user'
  ,DRIVER_DESC   VARCHAR(255)
  ,CONSTRAINT PK_VTDBTYPE_DRIVER_TYPE PRIMARY KEY (DRIVER_ID)
);

-- database driver 제공자
CREATE TABLE VTDBTYPE_DRIVER_PROVIDER(
  DRIVER_PROVIDER_ID VARCHAR(32) NOT NULL,
  DRIVER_ID VARCHAR(3),
  PROVIDER_NAME VARCHAR(255) NOT NULL,
  DB_TYPE VARCHAR(50) NOT NULL,
  DIRECT_YN CHAR(1) DEFAULT 'N' NOT NULL,
  DRIVER_CLASS VARCHAR(100) NOT NULL,
  PATH_TYPE VARCHAR(4) NOT NULL,
  VALIDATION_QUERY VARCHAR(255),
  DRIVER_DESC VARCHAR(255),
  DRIVER_PATH VARCHAR(2000),
  REG_ID VARCHAR(36),
  REG_DT TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
  UPD_ID VARCHAR(36),
  UPD_DT TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
  CONSTRAINT PK_VTDBTYPE_DRIVER_PROVIDER PRIMARY KEY (DRIVER_PROVIDER_ID)
);

-- db 메뉴 & role 맵핑 테이블
CREATE TABLE VTMENU_MENUBYROLE(
  MENU_ID   VARCHAR(30)
  ,ROLE_ID  VARCHAR(6)
  ,VIEWID  VARCHAR(36)
  ,REG_ID  VARCHAR(36)
  ,REG_DT  TIMESTAMP
);

-- db 메뉴 role 관리 테이블
CREATE TABLE VTMENU_ROLE(
  ROLE_ID  VARCHAR(6)
  ,ROLE_NM   VARCHAR(50)
  ,USE_YN  CHAR(1)
  ,REG_DT  TIMESTAMP
  ,REG_ID  VARCHAR(36)
  ,UPD_DT  TIMESTAMP
  ,UPD_ID  VARCHAR(36)
  ,CONSTRAINT PK_VTMENU_ROLE PRIMARY KEY (ROLE_ID)
);

-- db 메뉴 & role 맵핑 테이블
CREATE TABLE VTMENU_USERBYROLE(
  MENU_ID   VARCHAR(30)
  ,ROLE_ID  VARCHAR(6)
  ,REG_DT  TIMESTAMP
  ,REG_ID  VARCHAR(36)
);

-- sql 로그 관리
CREATE TABLE VTSQL_STATISTICS(
  VCONNID     VARCHAR(5)
  ,VIEWID    VARCHAR(36)
  ,START_TIME    TIMESTAMP
  ,S_MM    INTEGER
  ,S_DD    INTEGER
  ,S_HH    INTEGER
  ,END_TIME    TIMESTAMP
  ,DELAY_TIME   INTEGER
  ,RESULT_COUNT  DOUBLE
  ,COMMAND_TYPE  VARCHAR(32)
);

-- 사용자 SQL history
CREATE TABLE VTSQL_HISTORY(
  VCONNID     VARCHAR(5)
  ,VIEWID      VARCHAR(36)
  ,HISTORYID    VARCHAR(34)
  ,START_TIME    TIMESTAMP
  ,END_TIME    TIMESTAMP
  ,DELAY_TIME     INTEGER
  ,LOG_SQL       CLOB
  ,USR_IP       VARCHAR(45)
  ,ERROR_LOG    VARCHAR(20000)
  ,CONSTRAINT PK_VTUSER_HISTORY PRIMARY KEY (VCONNID, VIEWID, HISTORYID)
);

-- 쿼리 관리 테이블
CREATE TABLE VTSQL_SQLFILE(
  SQL_ID     VARCHAR(34)
  ,VCONNID     VARCHAR(5)
  ,VIEWID    VARCHAR(36)
  ,SQL_TITLE    VARCHAR(1000)
  ,SQL_CONT    CLOB
  ,SQL_PARAM   CLOB
  ,EDITOR_CURSOR  VARCHAR(100)
  ,REG_ID  VARCHAR(36)
  ,REG_DT  TIMESTAMP default current_timestamp
  ,UPD_ID  VARCHAR(36)    
  ,UPD_DT  TIMESTAMP default current_timestamp
  ,CONSTRAINT PK_VTSQL_SQLFILE PRIMARY KEY (SQL_ID)
);

-- sql file tab 정보
CREATE TABLE VTSQL_SQLFILE_TAB(
  VCONNID     VARCHAR(5)
  ,VIEWID    VARCHAR(36)
  , PREV_SQL_ID   VARCHAR(34)  
  , SQL_ID     VARCHAR(34)  
  , VIEW_YN    CHAR(1)    
  , REG_ID  VARCHAR(36)
  , REG_DT  TIMESTAMP default current_timestamp
  , CONSTRAINT PK_VTSQL_SQLFILE_TAB PRIMARY KEY (VCONNID, VIEWID, SQL_ID)
);

-- 쪽지 테이블
CREATE TABLE VTNOTE(
  NOTE_ID    VARCHAR(34)  
  ,PARENT_NOTE_ID  VARCHAR(34)  
  ,NOTE_TITLE    VARCHAR(1000)  
  ,NOTE_CONT    CLOB  
  ,DEL_YN    char(1) default 'N'
  ,REG_ID    VARCHAR(36)  
  ,REG_DT  TIMESTAMP default current_timestamp
  ,CONSTRAINT PK_VTNOTE PRIMARY KEY (NOTE_ID)
);

-- 쪽지 사용자 .
create table VTNOTE_USER(
  NOTE_ID  VARCHAR(34)
  ,SEND_ID  VARCHAR(250)
  ,RECV_ID  VARCHAR(250)
  ,VIEW_DT  TIMESTAMP
  ,CONSTRAINT PK_VTNOTE_USER PRIMARY KEY (NOTE_ID,SEND_ID, RECV_ID)
);

-- 사용자 설정 정보 테이블.
CREATE TABLE VTPREFERENCES(
  VCONNID   VARCHAR(5)
  ,VIEWID  VARCHAR(36)
  ,PREF_KEY  VARCHAR(250)
  ,PREF_VAL  CLOB
  ,REG_ID  VARCHAR(36)
  ,REG_DT  TIMESTAMP default CURRENT_TIMESTAMP
  ,UPD_ID  VARCHAR(36)    
  ,UPD_DT   TIMESTAMP default CURRENT_TIMESTAMP
  ,CONSTRAINT PK_VTPREFERENCES PRIMARY KEY (VCONNID, VIEWID, PREF_KEY)
);

-- 용어집 정보 테이블.
CREATE TABLE VTGLOSSARY(
  WORD_IDX  INTEGER      
  ,WORD  VARCHAR(500)      
  ,WORD_EN  VARCHAR(500)    
  ,WORD_ABBR  VARCHAR(500)    
  ,WORD_TYPE  VARCHAR(20)    
  ,WORD_LENGTH  VARCHAR(10)    
  ,WORD_DESC  VARCHAR(20000)    
  ,REG_ID  VARCHAR(36)    
  ,REG_DT  TIMESTAMP default CURRENT_TIMESTAMP
  ,UPD_ID  VARCHAR(36)    
  ,UPD_DT   TIMESTAMP default CURRENT_TIMESTAMP
  ,CONSTRAINT PK_VTGLOSSARY PRIMARY KEY (WORD_IDX)
);

-- 서버 예외 로그
CREATE TABLE VTSQL_EXCEPTIONLOG(
  EXCP_ID  VARCHAR(34)  
  ,SERVER_ID VARCHAR2(32)  
  ,EXCP_TYPE VARCHAR2(32)  
  ,EXCP_TITLE VARCHAR2(2000)  
  ,EXCP_CONT VARCHAR2(6000)  
  ,REG_ID  VARCHAR(36)
  ,REG_DT  TIMESTAMP default current_timestamp 
  ,CONSTRAINT PK_VTSQL_EXCEPTIONLOG PRIMARY KEY ( EXCP_ID)
);

-- 첨부파일
CREATE TABLE VTFILE(
  FILE_ID VARCHAR(32) not null   
  ,FILE_DIV VARCHAR(50) not null  
  ,FILE_CONT_ID VARCHAR(32) not null  
  ,FILE_FIELD_NAME VARCHAR(32) not null
  ,FILE_NAME   VARCHAR(500)    
  ,FILE_PATH   VARCHAR(255)    
  ,FILE_EXT  VARCHAR(10)    
  ,CONT_GROUP_ID   VARCHAR(36)    
  ,REG_ID  VARCHAR(36)    
  ,REG_DT  TIMESTAMP DEFAULT CURRENT_TIMESTAMP 
  ,FILE_SIZE   BIGINT
  ,CONSTRAINT PK_VTFILE PRIMARY KEY ( FILE_ID)
);

-- board table
CREATE TABLE VTBOARD(
  ARTICLE_ID BIGINT NOT NULL
  ,BOARD_CODE VARCHAR(34) NOT NULL
  ,TITLE VARCHAR(250)
  ,CONTENTS CLOB(2147483647)
  ,COMMENT_CNT BIGINT DEFAULT 0
  ,AUTHOR_NAME VARCHAR(255)
  ,NOTICE_YN CHAR(1) DEFAULT 'N'
  ,REG_ID VARCHAR(36)
  ,REG_DT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
  ,UPD_ID VARCHAR(36)
  ,UPD_DT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
  ,CONSTRAINT PK_VTBOARD PRIMARY KEY  ( ARTICLE_ID, BOARD_CODE)
);

-- board comment
CREATE TABLE VTBOARD_COMMENT(
  COMMENT_ID BIGINT NOT NULL
  ,ARTICLE_ID VARCHAR(34) NOT NULL
  ,GRP_COMMENT_ID BIGINT
  ,PARENT_COMMENT_ID BIGINT
  ,GRP_SEQ BIGINT
  ,INDENT INTEGER DEFAULT 1
  ,BOARD_CODE VARCHAR(50) NOT NULL
  ,CONTENTS CLOB(2147483647)
  ,AUTHOR_NAME VARCHAR(255)
  ,DEL_YN CHAR(1) DEFAULT 'N'
  ,REG_ID VARCHAR(36)
  ,REG_DT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
  ,UPD_ID VARCHAR(36)
  ,UPD_DT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
  ,CONSTRAINT PK_VTBOARD_COMMENT PRIMARY KEY  ( ARTICLE_ID, COMMENT_ID)
);

-- board file
CREATE TABLE VTBOARD_FILE(
  FILE_ID BIGINT NOT NULL
  ,CONT_ID BIGINT NOT NULL
  ,CONT_TYPE VARCHAR(50) NOT NULL
  ,BOARD_CODE VARCHAR(50) NOT NULL
  ,FILE_FIELD_NAME VARCHAR(256)
  ,FILE_NAME VARCHAR(500)
  ,FILE_PATH VARCHAR(500)
  ,FILE_EXT VARCHAR(10)
  ,FILE_SIZE BIGINT
  ,REG_ID VARCHAR(36)
  ,REG_DT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
  ,CONSTRAINT PK_VTBOARD_FILE PRIMARY KEY (FILE_ID)
);

-- driver 파일
CREATE TABLE VTDBTYPE_DRIVER_FILE(
  FILE_ID VARCHAR(32) not null   
  ,FILE_DIV VARCHAR(50) not null  
  ,FILE_CONT_ID VARCHAR(32) not null  
  ,FILE_NAME   VARCHAR(500)    
  ,FILE_PATH   VARCHAR(255)    
  ,FILE_EXT  VARCHAR(10)    
  ,FILE_SIZE   BIGINT
  ,REG_ID  VARCHAR(36)    
  ,REG_DT  TIMESTAMP DEFAULT CURRENT_TIMESTAMP 
  ,CONSTRAINT PK_VTDBTYPE_DRIVER_FILE PRIMARY KEY ( FILE_ID)
);

-- email token table 파일
CREATE TABLE VTEMAIL_TOKEN(
  TOKEN   VARCHAR(36) not null
  ,VIEWID   VARCHAR(36)  not null
  ,TOKEN_TYPE VARCHAR(10) not null
  ,REG_ID  VARCHAR(36)    
  ,REG_DT  TIMESTAMP DEFAULT CURRENT_TIMESTAMP 
  ,CONSTRAINT PK_VTEMAIL_TOKEN PRIMARY KEY (TOKEN, VIEWID)
);

-- // varsql job manage table
CREATE TABLE VTQTZ_JOB_SCHEDULE(
   JOB_UID VARCHAR(32) NOT NULL
  , JOB_NAME VARCHAR(200) NOT NULL
  , JOB_GROUP VARCHAR(200) NOT NULL
  , VCONNID   VARCHAR(5)
  , JOB_DATA  CLOB
  , CRON_EXPRESSION VARCHAR(120)
  , JOB_DESCRIPTION VARCHAR(250) 
  , REG_ID   VARCHAR(36)
  , REG_DT  TIMESTAMP default current_timestamp
  , UPD_ID   VARCHAR(36)
  , UPD_DT  TIMESTAMP default current_timestamp
  , CONSTRAINT PK_VTQTZ_JOB_SCHEDULE PRIMARY KEY (JOB_UID)
);

--// job history 관리 테이블  (custom table)
CREATE TABLE VTQTZ_HISTORY(
  HIST_SEQ BIGINT NOT NULL,
  INSTANCE_ID VARCHAR(120) NOT NULL,
  JOB_UID VARCHAR(32) NOT NULL,
  RUN_TYPE VARCHAR(5) NOT NULL default 'BATCH',
  START_TIME TIMESTAMP NOT NULL, 
  END_TIME TIMESTAMP NOT NULL,
  RUN_TIME BIGINT,
  RESULT_COUNT BIGINT, 
  FAIL_COUNT BIGINT, 
  MESSAGE VARCHAR(2000),
  STATUS VARCHAR(20),
  CUSTOM_INFO VARCHAR(3000)
);

-- 로그 확장 정보
CREATE TABLE VTQTZ_HISTORY_LOG(
  HIST_SEQ BIGINT NOT NULL,
  LOG_TYPE VARCHAR(10) NOT NULL,
  LOG CLOB
);


CREATE TABLE VTQTZ_CALENDARS (
  SCHED_NAME VARCHAR(120) NOT NULL,
  CALENDAR_NAME VARCHAR (200)  NOT NULL ,
  CALENDAR IMAGE NOT NULL
);

CREATE TABLE VTQTZ_CRON_TRIGGERS (
  SCHED_NAME VARCHAR(120) NOT NULL,
  TRIGGER_NAME VARCHAR (200)  NOT NULL ,
  TRIGGER_GROUP VARCHAR (200)  NOT NULL ,
  CRON_EXPRESSION VARCHAR (120)  NOT NULL ,
  TIME_ZONE_ID VARCHAR (80) 
);

CREATE TABLE VTQTZ_FIRED_TRIGGERS (
  SCHED_NAME VARCHAR(120) NOT NULL,
  ENTRY_ID VARCHAR (95)  NOT NULL ,
  TRIGGER_NAME VARCHAR (200)  NOT NULL ,
  TRIGGER_GROUP VARCHAR (200)  NOT NULL ,
  INSTANCE_NAME VARCHAR (200)  NOT NULL ,
  FIRED_TIME BIGINT NOT NULL ,
  SCHED_TIME BIGINT NOT NULL ,
  PRIORITY INTEGER NOT NULL ,
  STATE VARCHAR (16)  NOT NULL,
  JOB_NAME VARCHAR (200)  NULL ,
  JOB_GROUP VARCHAR (200)  NULL ,
  IS_NONCONCURRENT BOOLEAN  NULL ,
  REQUESTS_RECOVERY BOOLEAN  NULL 
);

CREATE TABLE VTQTZ_PAUSED_TRIGGER_GRPS (
  SCHED_NAME VARCHAR(120) NOT NULL,
  TRIGGER_GROUP VARCHAR (200)  NOT NULL 
);

CREATE TABLE VTQTZ_SCHEDULER_STATE (
  SCHED_NAME VARCHAR(120) NOT NULL,
  INSTANCE_NAME VARCHAR (200)  NOT NULL ,
  LAST_CHECKIN_TIME BIGINT NOT NULL ,
  CHECKIN_INTERVAL BIGINT NOT NULL
);

CREATE TABLE VTQTZ_LOCKS (
  SCHED_NAME VARCHAR(120) NOT NULL,
  LOCK_NAME VARCHAR (40)  NOT NULL 
);

CREATE TABLE VTQTZ_JOB_DETAILS (
  SCHED_NAME VARCHAR(120) NOT NULL,
  JOB_NAME VARCHAR (200)  NOT NULL ,
  JOB_GROUP VARCHAR (200)  NOT NULL ,
  DESCRIPTION VARCHAR (250) NULL ,
  JOB_CLASS_NAME VARCHAR (250)  NOT NULL ,
  IS_DURABLE BOOLEAN  NOT NULL ,
  IS_NONCONCURRENT BOOLEAN  NOT NULL ,
  IS_UPDATE_DATA BOOLEAN  NOT NULL ,
  REQUESTS_RECOVERY BOOLEAN  NOT NULL ,
  JOB_DATA IMAGE NULL
);

CREATE TABLE VTQTZ_SIMPLE_TRIGGERS (
  SCHED_NAME VARCHAR(120) NOT NULL,
  TRIGGER_NAME VARCHAR (200)  NOT NULL ,
  TRIGGER_GROUP VARCHAR (200)  NOT NULL ,
  REPEAT_COUNT BIGINT NOT NULL ,
  REPEAT_INTERVAL BIGINT NOT NULL ,
  TIMES_TRIGGERED BIGINT NOT NULL
);

CREATE TABLE VTQTZ_SIMPROP_TRIGGERS (
  SCHED_NAME VARCHAR(120) NOT NULL,
  TRIGGER_NAME VARCHAR(200) NOT NULL,
  TRIGGER_GROUP VARCHAR(200) NOT NULL,
  STR_PROP_1 VARCHAR(512) NULL,
  STR_PROP_2 VARCHAR(512) NULL,
  STR_PROP_3 VARCHAR(512) NULL,
  INT_PROP_1 INTEGER NULL,
  INT_PROP_2 INTEGER NULL,
  LONG_PROP_1 BIGINT NULL,
  LONG_PROP_2 BIGINT NULL,
  DEC_PROP_1 NUMERIC(13,4) NULL,
  DEC_PROP_2 NUMERIC(13,4) NULL,
  BOOL_PROP_1 BOOLEAN NULL,
  BOOL_PROP_2 BOOLEAN NULL
);

CREATE TABLE VTQTZ_BLOB_TRIGGERS (
  SCHED_NAME VARCHAR(120) NOT NULL,
  TRIGGER_NAME VARCHAR (200)  NOT NULL ,
  TRIGGER_GROUP VARCHAR (200)  NOT NULL ,
  BLOB_DATA IMAGE NULL
);

CREATE TABLE VTQTZ_TRIGGERS (
  SCHED_NAME VARCHAR(120) NOT NULL,
  TRIGGER_NAME VARCHAR (200)  NOT NULL ,
  TRIGGER_GROUP VARCHAR (200)  NOT NULL ,
  JOB_NAME VARCHAR (200)  NOT NULL ,
  JOB_GROUP VARCHAR (200)  NOT NULL ,
  DESCRIPTION VARCHAR (250) NULL ,
  NEXT_FIRE_TIME BIGINT NULL ,
  PREV_FIRE_TIME BIGINT NULL ,
  PRIORITY INTEGER NULL ,
  TRIGGER_STATE VARCHAR (16)  NOT NULL ,
  TRIGGER_TYPE VARCHAR (8)  NOT NULL ,
  START_TIME BIGINT NOT NULL ,
  END_TIME BIGINT NULL ,
  CALENDAR_NAME VARCHAR (200)  NULL ,
  MISFIRE_INSTR SMALLINT NULL ,
  JOB_DATA IMAGE NULL
);

ALTER TABLE VTQTZ_CALENDARS  ADD
  CONSTRAINT PK_VTQTZ_CALENDARS PRIMARY KEY  
  (
  SCHED_NAME,
  CALENDAR_NAME
  );

ALTER TABLE VTQTZ_CRON_TRIGGERS  ADD
  CONSTRAINT PK_VTQTZ_CRON_TRIGGERS PRIMARY KEY  
  (
  SCHED_NAME,
  TRIGGER_NAME,
  TRIGGER_GROUP
  );

ALTER TABLE VTQTZ_FIRED_TRIGGERS  ADD
  CONSTRAINT PK_VTQTZ_FIRED_TRIGGERS PRIMARY KEY  
  (
  SCHED_NAME,
  ENTRY_ID
  );

ALTER TABLE VTQTZ_PAUSED_TRIGGER_GRPS  ADD
  CONSTRAINT PK_VTQTZ_PAUSED_TRIGGER_GRPS PRIMARY KEY  
  (
  SCHED_NAME,
  TRIGGER_GROUP
  );

ALTER TABLE VTQTZ_SCHEDULER_STATE  ADD
  CONSTRAINT PK_VTQTZ_SCHEDULER_STATE PRIMARY KEY  
  (
  SCHED_NAME,
  INSTANCE_NAME
  );

ALTER TABLE VTQTZ_LOCKS  ADD
  CONSTRAINT PK_VTQTZ_LOCKS PRIMARY KEY  
  (
  SCHED_NAME,
  LOCK_NAME
  );

ALTER TABLE VTQTZ_JOB_DETAILS  ADD
  CONSTRAINT PK_VTQTZ_JOB_DETAILS PRIMARY KEY  
  (
  SCHED_NAME,
  JOB_NAME,
  JOB_GROUP
  );

ALTER TABLE VTQTZ_SIMPLE_TRIGGERS  ADD
  CONSTRAINT PK_VTQTZ_SIMPLE_TRIGGERS PRIMARY KEY  
  (
  SCHED_NAME,
  TRIGGER_NAME,
  TRIGGER_GROUP
  );

ALTER TABLE VTQTZ_SIMPROP_TRIGGERS  ADD
  CONSTRAINT PK_VTQTZ_SIMPROP_TRIGGERS PRIMARY KEY  
  (
  SCHED_NAME,
  TRIGGER_NAME,
  TRIGGER_GROUP
  );

ALTER TABLE VTQTZ_TRIGGERS  ADD
  CONSTRAINT PK_VTQTZ_TRIGGERS PRIMARY KEY  
  (
  SCHED_NAME,
  TRIGGER_NAME,
  TRIGGER_GROUP
  );

ALTER TABLE VTQTZ_CRON_TRIGGERS ADD
  CONSTRAINT FK_VTQTZ_CRON_TRIGGERS_VTQTZ_TRIGGERS FOREIGN KEY
  (
  SCHED_NAME,
  TRIGGER_NAME,
  TRIGGER_GROUP
  ) REFERENCES VTQTZ_TRIGGERS (
  SCHED_NAME,
  TRIGGER_NAME,
  TRIGGER_GROUP
  ) ON DELETE CASCADE;


ALTER TABLE VTQTZ_SIMPLE_TRIGGERS ADD
  CONSTRAINT FK_VTQTZ_SIMPLE_TRIGGERS_VTQTZ_TRIGGERS FOREIGN KEY
  (
  SCHED_NAME,
  TRIGGER_NAME,
  TRIGGER_GROUP
  ) REFERENCES VTQTZ_TRIGGERS (
  SCHED_NAME,
  TRIGGER_NAME,
  TRIGGER_GROUP
  ) ON DELETE CASCADE;

ALTER TABLE VTQTZ_SIMPROP_TRIGGERS ADD
  CONSTRAINT FK_VTQTZ_SIMPROP_TRIGGERS_VTQTZ_TRIGGERS FOREIGN KEY
  (
  SCHED_NAME,
  TRIGGER_NAME,
  TRIGGER_GROUP
  ) REFERENCES VTQTZ_TRIGGERS (
  SCHED_NAME,
  TRIGGER_NAME,
  TRIGGER_GROUP
  ) ON DELETE CASCADE;


ALTER TABLE VTQTZ_TRIGGERS ADD
  CONSTRAINT FK_VTQTZ_TRIGGERS_VTQTZ_JOB_DETAILS FOREIGN KEY
  (
  SCHED_NAME,
  JOB_NAME,
  JOB_GROUP
  ) REFERENCES VTQTZ_JOB_DETAILS (
  SCHED_NAME,
  JOB_NAME,
  JOB_GROUP
  );
  
]]>
    </sql>
  </apply>
  <revert>
    <sql description="inint db revert">
    
drop sequence hibernate_sequence;
drop table VTDATABASE_CHANGELOG;
drop table VTSEQUENCE;
drop table VTUSER;
drop table VTUSER_REMEMBERME;
drop table VTUSER_LOG_HIST;
drop table VTCONNECTION;
drop table VTDATABASE_CONN_HIST;
drop table VTDATABASE_CONN_TAB;
drop table VTDATABASE_MANAGER;
drop table VTDATABASE_BLOCK_USER;
drop table VTDATABASE_GROUP;
drop table VTDATABASE_GROUP_DB;
drop table VTDATABASE_GROUP_USER;
drop table VTQNA;
drop table VTDBTYPE;
drop table VTDBTYPE_DRIVER_TYPE;
drop table VTDBTYPE_DRIVER_PROVIDER;
drop table VTMENU_MENUBYROLE;
drop table VTMENU_ROLE;
drop table VTMENU_USERBYROLE;
drop table VTSQL_STATISTICS;
drop table VTSQL_HISTORY;
drop table VTSQL_SQLFILE;
drop table VTSQL_SQLFILE_TAB;
drop table VTNOTE;
drop table VTNOTE_USER;
drop table VTPREFERENCES;
drop table VTGLOSSARY;
drop table VTSQL_EXCEPTIONLOG;
drop table VTFILE;
drop table VTBOARD;
drop table VTBOARD_COMMENT;
drop table VTBOARD_FILE;
drop table VTDBTYPE_DRIVER_FILE;
drop table VTEMAIL_TOKEN;
drop table VTQTZ_JOB_SCHEDULE;
drop table VTQTZ_HISTORY;
drop table VTQTZ_HISTORY_LOG;
drop table VTQTZ_CALENDARS;
drop table VTQTZ_CRON_TRIGGERS;
drop table VTQTZ_FIRED_TRIGGERS;
drop table VTQTZ_PAUSED_TRIGGER_GRPS;
drop table VTQTZ_SCHEDULER_STATE;
drop table VTQTZ_LOCKS;
drop table VTQTZ_JOB_DETAILS;
drop table VTQTZ_SIMPLE_TRIGGERS;
drop table VTQTZ_SIMPROP_TRIGGERS;
drop table VTQTZ_BLOB_TRIGGERS;
drop table VTQTZ_TRIGGERS;

    </sql>
  </revert>
</database>